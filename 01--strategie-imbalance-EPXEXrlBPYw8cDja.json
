{"createdAt":"2025-08-13T06:21:53.206Z","updatedAt":"2025-08-16T07:20:39.000Z","id":"EPXEXrlBPYw8cDja","name":"01- Strategie Imbalance","active":true,"isArchived":false,"nodes":[{"parameters":{"url":"=https://query1.finance.yahoo.com/v8/finance/chart/{{ $('Edit Fields').item.json.symbol }}\n\n\n","sendQuery":true,"queryParameters":{"parameters":[{"name":"interval","value":"5m"},{"name":"range","value":"30m"},{"name":"lang","value":"fr"},{"name":"region","value":"fr"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1024,-272],"id":"4dbe04e7-b843-4f5e-a9a2-60a5e668dd22","name":"requete reguliere2"},{"parameters":{"jsCode":"function toFRTimeString(epochSec) {\n  const d = new Date(epochSec * 1000);\n  return new Intl.DateTimeFormat('fr-FR', {\n    timeZone: 'Europe/Paris',\n    year: 'numeric', month: '2-digit', day: '2-digit',\n    hour: '2-digit', minute: '2-digit', second: '2-digit'\n  }).format(d);\n}\n\nconst outputs = [];\n\nfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n  const root = items[itemIndex].json?.chart?.result?.[0];\n\n  let candles = [];\n  let note = null;\n\n  if (root) {\n    const ts = root.timestamp || [];\n    const q = root.indicators?.quote?.[0] || {};\n    const O = Array.isArray(q.open)   ? q.open   : [];\n    const H = Array.isArray(q.high)   ? q.high   : [];\n    const L = Array.isArray(q.low)    ? q.low    : [];\n    const C = Array.isArray(q.close)  ? q.close  : [];\n    const V = Array.isArray(q.volume) ? q.volume : [];\n\n    const n = Math.min(ts.length, O.length, H.length, L.length, C.length);\n\n    if (n > 0) {\n      for (let i = 0; i < n; i++) {\n        if (\n          ts[i] != null &&\n          O[i] != null && H[i] != null && L[i] != null && C[i] != null\n        ) {\n          candles.push({\n            timestamp_epoch: ts[i],\n            timestamp_fr: toFRTimeString(ts[i]),\n            open: O[i],\n            high: H[i],\n            low: L[i],\n            close: C[i],\n            volume: (V.length > i && V[i] != null) ? V[i] : null\n          });\n        }\n      }\n    } else {\n      note = \"Aucun tableau OHLC trouvé (timestamp/quote vides).\";\n    }\n  } else {\n    note = \"Structure inattendue: chart.result[0] manquant.\";\n  }\n\n  outputs.push({\n    json: { symbol: root?.meta?.symbol ?? null, candles, note },\n    pairedItem: { item: itemIndex }\n  });\n}\n\nreturn outputs;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1216,-272],"id":"bd1b5695-851f-42b2-ac24-0bcd669b923f","name":"code bougie 10mn"},{"parameters":{"jsCode":"// --- Paramètre à configurer ---\n// Définissez ici le pourcentage minimal de l'imbalance par rapport au prix de l'action.\n// Par exemple, 0.25 signifie que l'imbalance doit représenter au moins 0.25% du prix.\nconst minImbalancePercentage = 0.15;\n\n\n// --- Logique du script ---\nconst inputData = items[0].json;\nconst candles = inputData.candles;\nconst symbol = inputData.symbol;\nconst foundImbalances = [];\n\nif (candles && candles.length >= 3) {\n  for (let i = 0; i < candles.length - 2; i++) {\n    const candle1 = candles[i];\n    const candle2 = candles[i + 1];\n    const candle3 = candles[i + 2];\n\n    // --- Détection d'imbalance HAUSSIÈRE ---\n    if (candle3.low > candle1.high) {\n      const imbalanceSize = candle3.low - candle1.high;\n      \n      // On calcule la taille minimale requise en se basant sur le prix actuel (high de la bougie 1)\n      const dynamicMinSize = candle1.high * (minImbalancePercentage / 100);\n\n      // On compare la taille de l'imbalance à notre seuil dynamique\n      if (imbalanceSize >= dynamicMinSize) {\n        foundImbalances.push({ json: {\n            symbol: symbol, type: 'Bullish', size: imbalanceSize,\n            top: candle3.low, bottom: candle1.high, seuil: candle3.low,\n            timestamp_epoch: candle2.timestamp_epoch, timestamp_fr: candle2.timestamp_fr\n        }});\n      }\n    }\n\n    // --- Détection d'imbalance BAISSIÈRE ---\n    if (candle3.high < candle1.low) {\n      const imbalanceSize = candle1.low - candle3.high;\n\n      // On calcule la taille minimale requise en se basant sur le prix actuel (low de la bougie 1)\n      const dynamicMinSize = candle1.low * (minImbalancePercentage / 100);\n\n      // On compare la taille de l'imbalance à notre seuil dynamique\n      if (imbalanceSize >= dynamicMinSize) {\n        foundImbalances.push({ json: {\n            symbol: symbol, type: 'Bearish', size: imbalanceSize,\n            top: candle1.low, bottom: candle3.high, seuil: candle1.low,\n            timestamp_epoch: candle2.timestamp_epoch, timestamp_fr: candle2.timestamp_fr\n        }});\n      }\n    }\n  }\n}\n\n// --- Logique de sortie (inchangée) ---\nif (foundImbalances.length > 0) {\n  return foundImbalances;\n} else {\n  return [{\n    json: {\n      symbol: symbol,\n      type: 'None', \n      size: null,\n      top: null,\n      bottom: null,\n      seuil: null,\n      timestamp_epoch: null,\n      timestamp_fr: 'No imbalance found'\n    }\n  }];\n}\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1424,-272],"id":"5e2d26c0-380c-4263-ac05-766df00cf61f","name":"Code"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8d6401c2-3b53-43db-b5eb-ec93fe58d518","leftValue":"={{ $json.seuil }}","rightValue":"null","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1632,-272],"id":"e80608a4-4cf5-476a-812d-6d72f6c488a2","name":"If"},{"parameters":{"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1472,-96],"id":"69fa2ec7-f2f0-4062-884f-07fa9dabc306","name":"Wait","webhookId":"34f97ee4-24d2-4053-b8dc-9c84b3447f8f"},{"parameters":{"url":"=https://query1.finance.yahoo.com/v8/finance/chart/{{ $('Edit Fields').item.json.symbol }}\n\n\n","sendQuery":true,"queryParameters":{"parameters":[{"name":"interval","value":"1m"},{"name":"range","value":"20m"},{"name":"lang","value":"fr"},{"name":"region","value":"fr"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2080,-256],"id":"be9294db-3b84-4a3a-94d6-76a95eae41e2","name":"requete reguliere"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"68c572ef-8cfa-457b-9724-b9c98b38b989","leftValue":"={{ $('Code').item.json.seuil }}","rightValue":"={{ $json.cloture }}","operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2336,-256],"id":"991943de-fe7e-4095-b593-01dd98518c6c","name":"If1"},{"parameters":{"jsCode":"// On récupère le premier item en entrée.\nconst input = items[0].json;\n\n// On s'assure que la structure attendue existe pour éviter les erreurs.\nif (!input.chart || !input.chart.result || input.chart.result.length === 0) {\n  throw new Error(\"La structure des données d'entrée n'est pas valide ou est vide.\");\n}\n\n// Accès aux données principales\nconst result = input.chart.result[0];\nconst meta = result.meta;\nconst timestamps = result.timestamp;\nconst indicators = result.indicators.quote[0];\n\n// Vérification que les tableaux de données ne sont pas vides\nif (!timestamps || timestamps.length === 0) {\n  throw new Error(\"Aucun timestamp trouvé dans les données.\");\n}\n\n// On récupère l'index du dernier élément.\nconst lastIndex = timestamps.length - 1;\n\n// On extrait les données de la dernière bougie en utilisant cet index.\nconst lastTimestamp = timestamps[lastIndex];\nconst lastClose = indicators.close[lastIndex];\nconst lastHigh = indicators.high[lastIndex];\nconst lastLow = indicators.low[lastIndex];\nconst lastOpen = indicators.open[lastIndex];\nconst symbol = meta.symbol;\n\n// Gestion des valeurs nulles pour la dernière bougie\nif (lastTimestamp === null || lastClose === null) {\n  return [{ \n    json: { \n      error: \"La dernière bougie contient des données nulles et ne peut pas être traitée.\" \n    }\n  }];\n}\n\n// Conversion du timestamp (qui est en secondes) en un objet Date JavaScript.\n// Il faut multiplier par 1000 car JavaScript attend des millisecondes.\nconst dateObj = new Date(lastTimestamp * 1000);\n\n// On récupère le fuseau horaire depuis les métadonnées pour une conversion précise.\nconst timezone = meta.exchangeTimezoneName || 'UTC'; // 'Europe/Paris' dans votre cas\n\n// Formatage de la date et de l'heure en utilisant les standards français.\nconst date = dateObj.toLocaleDateString('fr-FR', { timeZone: timezone });\nconst heure = dateObj.toLocaleTimeString('fr-FR', { timeZone: timezone });\n\n// On construit l'objet de sortie avec les noms de champs que vous avez demandés.\nconst output = {\n  symbol: symbol,\n  date: date,\n  heure: heure,\n  cloture: lastClose,\n  hight: lastHigh, // Nom de champ \"hight\" comme demandé\n  low: lastLow,\n  open: lastOpen\n};\n\n// On retourne le résultat formaté pour n8n.\nreturn [{ json: output }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2208,-432],"id":"e31a7181-d3bc-4e2c-bae3-eff9b036b471","name":"Code1","disabled":true},{"parameters":{"amount":1,"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2560,-112],"id":"87b34a58-5410-4499-b5fa-58ca9abf1685","name":"Wait1","webhookId":"71674c8a-a957-412e-b038-16a1a0d588bd"},{"parameters":{"chatId":"7562186427","text":"=--Vérifier que SMA200 haussier--\n{{ $json.text }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2784,-256],"id":"83b622dc-30e0-4c1e-8d37-3b6da4f2fea3","name":"Send a text message","webhookId":"6d3a7f7c-2421-4ab5-9cd0-c806eb095c22","credentials":{"telegramApi":{"id":"3zWMDdIXgK9GGJJG","name":"Telegram account 2"}}},{"parameters":{"jsCode":"// On récupère les données du premier item en entrée.\nconst inputData = items[0].json;\n\n// On extrait chaque valeur pour plus de clarté.\nconst symbol = inputData.symbol;\nconst date = inputData.date;\nconst heure = inputData.heure;\n\n// On arrondit les valeurs numériques à 2 décimales pour une meilleure lisibilité.\nconst cloture = inputData.cloture.toFixed(2);\nconst high = inputData.hight.toFixed(2); // J'utilise \"hight\" pour correspondre à votre champ d'entrée.\nconst low = inputData.low.toFixed(2);\nconst open = inputData.open.toFixed(2);\n\n// On construit le message en utilisant le formatage Markdown de Telegram (*texte* pour le gras).\n// Vous pouvez personnaliser ce texte comme vous le souhaitez.\nconst message = `\n*📈 Alerte de Bougie sur ${symbol}*\n\n*Date :* ${date}\n*Heure :* ${heure}\n--------------------\n*Ouverture :* ${open} €\n*Plus Haut :* ${high} €\n*Plus Bas :* ${low} €\n*Clôture :* ${cloture} €\n`;\n\n// On retourne un nouvel objet JSON qui contient une clé \"text\" avec notre message.\n// Le node Telegram pourra utiliser cette clé directement.\nreturn [{\n  json: {\n    text: message\n  }\n}];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2560,-256],"id":"34ebe1df-590b-40f9-b46d-3cec08961b85","name":"Code5"},{"parameters":{"httpMethod":"POST","path":"euronext","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[608,-272],"id":"659acb86-f51f-4f55-bfc7-b5095791f296","name":"Webhook","webhookId":"29968da4-ba27-4776-a543-f02d9005c484"},{"parameters":{"content":"# NADAQ","height":448,"width":2400,"color":4},"type":"n8n-nodes-base.stickyNote","position":[576,144],"typeVersion":1,"id":"dd22cb58-3a7e-4ac4-aeb2-3dc4eab068bf","name":"Sticky Note"},{"parameters":{"jsCode":"// On récupère le premier item en entrée.\nconst inputData = items[0].json;\n\n// On vérifie que les données d'entrée ont la structure attendue de Twelve Data.\nif (!inputData || !Array.isArray(inputData.values)) {\n  return [{\n    json: {\n      symbol: null,\n      candles: [],\n      note: \"Erreur: la structure des données d'entrée ne correspond pas au format attendu de Twelve Data (le tableau 'values' est manquant).\"\n    }\n  }];\n}\n\nconst symbol = inputData.meta.symbol;\nconst rawCandles = inputData.values;\nconst timezone = inputData.meta.exchange_timezone || 'UTC';\n\nconst formattedCandles = [];\n\nfor (const candle of rawCandles) {\n  const dateObj = new Date(candle.datetime);\n  const timestamp_epoch = Math.floor(dateObj.getTime() / 1000);\n  const timestamp_fr = new Intl.DateTimeFormat('fr-FR', {\n    timeZone: 'Europe/Paris',\n    year: 'numeric', month: '2-digit', day: '2-digit',\n    hour: '2-digit', minute: '2-digit', second: '2-digit'\n  }).format(dateObj);\n\n  const open = parseFloat(candle.open);\n  const high = parseFloat(candle.high);\n  const low = parseFloat(candle.low);\n  const close = parseFloat(candle.close);\n  const volume = parseInt(candle.volume, 10);\n\n  formattedCandles.push({\n    timestamp_epoch: timestamp_epoch,\n    timestamp_fr: timestamp_fr,\n    open: open,\n    high: high,\n    low: low,\n    close: close,\n    volume: volume\n  });\n}\n\n// --- MODIFICATION APPLIQUÉE ICI ---\n// On inverse le tableau une seule fois pour s'assurer qu'il est en ordre chronologique\n// (de la bougie la plus ancienne à la plus récente) avant de l'envoyer au node suivant.\nformattedCandles.reverse();\n\n// On retourne l'objet final.\nreturn [{\n  json: {\n    symbol: symbol,\n    candles: formattedCandles,\n    note: null\n  }\n}];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1232,224],"id":"d52fdab5-bbdc-4190-b034-72c0a63a6e60","name":"code bougie 10mn3"},{"parameters":{"jsCode":"// --- Paramètre à configurer ---\nconst minImbalancePercentage = 0.15;\n// --- Logique du script ---\nconst inputData = items[0].json;\nconst candles = inputData.candles;\nconst symbol = inputData.symbol;\nconst foundImbalances = [];\nif (candles && candles.length >= 3) {\n  for (let i = 0; i < candles.length - 2; i++) {\n    const candle1 = candles[i];\n    const candle2 = candles[i + 1];\n    const candle3 = candles[i + 2];\n    // --- Détection d'imbalance HAUSSIÈRE uniquement ---\n    if (candle3.low > candle1.high) {\n      const imbalanceSize = candle3.low - candle1.high;\n      const dynamicMinSize = candle1.high * (minImbalancePercentage / 100);\n      if (imbalanceSize >= dynamicMinSize) {\n        foundImbalances.push({ json: {\n          symbol: symbol,\n          type: 'Bullish',\n          size: imbalanceSize,\n          top: candle3.low,\n          bottom: candle1.high,\n          seuil: candle3.low,\n          timestamp_epoch: candle2.timestamp_epoch,\n          timestamp_fr: candle2.timestamp_fr\n        }});\n      }\n    }\n  }\n}\n// --- Logique de sortie ---\nreturn foundImbalances.length\n  ? foundImbalances\n  : [{ json: { symbol, type: 'None', size: null, top: null, bottom: null, seuil: null, timestamp_epoch: null, timestamp_fr: 'No imbalance found' } }];\n\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1440,224],"id":"94b32807-6228-4d7a-9e8f-9a31309182d1","name":"Code9"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8d6401c2-3b53-43db-b5eb-ec93fe58d518","leftValue":"={{ $json.seuil }}","rightValue":"null","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1648,224],"id":"f623a56d-37a3-47a1-86d5-e391abe227d7","name":"If6"},{"parameters":{"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1664,384],"id":"d6484adc-162d-4f24-820a-1a83401d295e","name":"Wait6","webhookId":"34f97ee4-24d2-4053-b8dc-9c84b3447f8f"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"68c572ef-8cfa-457b-9724-b9c98b38b989","leftValue":"={{ $('Code9').item.json.seuil }}","rightValue":"={{ $('requete reguliere7').item.json.values[0].close }}","operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2368,240],"id":"5b41517d-0520-41e1-bf20-90bcf47f6b66","name":"If7"},{"parameters":{"jsCode":"// Function node (n8n) — Format Twelve Data uniquement\n\n// 1) Récupération de l'entrée\nconst input = items[0].json;\n\n// 2) Validation structure Twelve Data\nif (!input?.meta || !Array.isArray(input.values) || input.values.length === 0) {\n  throw new Error(\"Entrée invalide: attendu un objet avec 'meta' et un tableau 'values' non vide (format Twelve Data).\");\n}\n\n// 3) Helper: convertir en nombre (ou null)\nconst toNum = (v) => (v === null || v === undefined || v === '' ? null : Number(v));\n\n// 4) Récupérer la bougie la plus récente\n//    Twelve Data renvoie généralement la plus récente en premier,\n//    mais on sécurise en prenant la max par 'datetime' (format YYYY-MM-DD HH:mm:ss)\nconst latest = input.values.reduce((acc, cur) => {\n  return (!acc || String(cur.datetime) > String(acc.datetime)) ? cur : acc;\n}, null);\n\n// 5) Parsing des valeurs numériques\nconst lastOpen  = toNum(latest.open);\nconst lastHigh  = toNum(latest.high);\nconst lastLow   = toNum(latest.low);\nconst lastClose = toNum(latest.close);\n\nif (lastClose === null) {\n  return [{ json: { error: \"La dernière bougie contient des données nulles et ne peut pas être traitée.\" } }];\n}\n\n// 6) Formatage date/heure\n//    latest.datetime est une chaîne \"YYYY-MM-DD HH:mm:ss\" (horaire d'échange).\n//    Sans librairie de timezone, on construit une base UTC pour obtenir un affichage stable,\n//    puis on présente en Europe/Paris (affichage cohérent).\nconst [d, t] = String(latest.datetime).split(' ');\nconst [Y, M, D] = (d || '').split('-').map(Number);\nconst [h, m, s] = (t || '00:00:00').split(':').map(Number);\nconst dateObj = new Date(Date.UTC(Y || 1970, (M || 1) - 1, D || 1, h || 0, m || 0, s || 0));\n\nconst date = dateObj.toLocaleDateString('fr-FR', { timeZone: 'Europe/Paris' });\nconst heure = dateObj.toLocaleTimeString('fr-FR', { timeZone: 'Europe/Paris' });\n\n// 7) Construction de la sortie\nconst output = {\n  symbol: input.meta.symbol,\n  date,\n  heure,\n  cloture: lastClose,\n  hight: lastHigh, // orthographe conservée\n  low: lastLow,\n  open: lastOpen,\n  // Optionnel pour debug :\n  // source_datetime: latest.datetime,\n  // exchange_timezone: input.meta.exchange_timezone\n};\n\n// 8) Retour au format n8n\nreturn [{ json: output }];\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2224,128],"id":"1a71e242-e76d-4394-8bb0-9ae284ad6209","name":"Code10","disabled":true},{"parameters":{"amount":2,"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2592,384],"id":"5be6c9d8-b005-4e1b-812a-768e78a1cfa6","name":"Wait7","webhookId":"71674c8a-a957-412e-b038-16a1a0d588bd"},{"parameters":{"chatId":"7562186427","text":"=--Vérifier que SMA200 haussier--\n{{ $json.text }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2784,240],"id":"bfbd13db-b2d9-4b3a-be6d-7c399c491de4","name":"Send a text message3","webhookId":"6d3a7f7c-2421-4ab5-9cd0-c806eb095c22","credentials":{"telegramApi":{"id":"3zWMDdIXgK9GGJJG","name":"Telegram account 2"}}},{"parameters":{"jsCode":"// Récupère l'item d'entrée (tableau Twelve Data -> on prend le 1er objet)\nconst root = Array.isArray(items[0].json) ? items[0].json[0] : items[0].json;\n\n// Sécurisation\nif (!root || !root.meta || !root.values || !root.values[0]) {\n  throw new Error('Entrée invalide: attendu [{ meta, values:[{ datetime, open, high, low, close }] }].');\n}\n\nconst meta = root.meta;\nconst v = root.values[0];\n\n// Parsing numérique\nconst open  = Number.parseFloat(v.open);\nconst high  = Number.parseFloat(v.high);\nconst low   = Number.parseFloat(v.low);\nconst close = Number.parseFloat(v.close);\n\n// Vérifs\nfor (const [k, val] of Object.entries({open, high, low, close})) {\n  if (!Number.isFinite(val)) throw new Error(`Valeur ${k} invalide: \"${v[k]}\"`);\n}\n\n// Données d’affichage\nconst symbol = meta.symbol || 'N/A';\nconst currency = meta.currency || '';\nconst datetime = v.datetime || 'N/A'; // format Twelve Data, généralement dans exchange_timezone\nconst tz = meta.exchange_timezone || '';\n\n// Message Telegram (Markdown)\nconst message = `\n*📈 Alerte de Bougie sur ${symbol}*\n*Date/Heure :* ${datetime} ${tz}\n--------------------\n*Ouverture :* ${open.toFixed(2)} ${currency}\n*Plus Haut :* ${high.toFixed(2)} ${currency}\n*Plus Bas :* ${low.toFixed(2)} ${currency}\n*Clôture :* ${close.toFixed(2)} ${currency}\n`;\n\n// Sortie\nreturn [{ json: { text: message.trim() } }];\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2592,240],"id":"227f9e62-4f6b-46a5-bc2c-6865e4043c65","name":"Code11"},{"parameters":{"httpMethod":"POST","path":"nasdaq","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[608,224],"id":"5ca53d44-6c0d-483e-a03e-2614de49d44e","name":"Webhook3","webhookId":"29968da4-ba27-4776-a543-f02d9005c484"},{"parameters":{"content":"# EURONEXT","height":464,"width":2400,"color":5},"type":"n8n-nodes-base.stickyNote","position":[576,-352],"typeVersion":1,"id":"b531fb99-bb00-4bbb-b9c9-e733a6c2dbb0","name":"Sticky Note1"},{"parameters":{"url":"=https://api.twelvedata.com/time_series\n\n","sendQuery":true,"queryParameters":{"parameters":[{"name":"symbol","value":"={{ $('Edit Fields1').item.json.symbol }}"},{"name":"interval","value":"5min"},{"name":"outputsize","value":"3"},{"name":"apikey","value":"0acb27a7d7314f52b8c63ff8a3a9becb"},{"name":"timezone","value":"Europe/Paris"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1024,224],"id":"14139535-20e1-4d94-8e89-360ee39722da","name":"requete reguliere6"},{"parameters":{"chatId":"7562186427","text":"={{ $('Code').item.json.timestamp_fr }}\nEntrée en zone imbalance sur {{ $('Edit Fields').item.json.symbol }}, seuil  {{ $json.seuil }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1856,-256],"id":"0f10819b-992e-4d0b-bd64-d3ac06a377c3","name":"Send a text message7","webhookId":"7a5b95fb-ba41-433c-b6ad-e3dcb6dc193b","credentials":{"telegramApi":{"id":"3zWMDdIXgK9GGJJG","name":"Telegram account 2"}}},{"parameters":{"chatId":"7562186427","text":"={{ $('Code9').item.json.timestamp_fr }}\nEntrée en zone imbalance sur {{ $('Edit Fields1').item.json.symbol }}, seuil  {{ $json.seuil }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1856,240],"id":"b962f61d-5b72-4d1b-8bb4-49acece533b2","name":"Send a text message10","webhookId":"7a5b95fb-ba41-433c-b6ad-e3dcb6dc193b","credentials":{"telegramApi":{"id":"3zWMDdIXgK9GGJJG","name":"Telegram account 2"}}},{"parameters":{"url":"=https://api.twelvedata.com/time_series\n\n","sendQuery":true,"queryParameters":{"parameters":[{"name":"symbol","value":"={{ $('Edit Fields1').item.json.symbol }}"},{"name":"interval","value":"5min"},{"name":"outputsize","value":"1"},{"name":"apikey","value":"0acb27a7d7314f52b8c63ff8a3a9becb"},{"name":"timezone","value":"Europe/Paris"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2080,240],"id":"2a1569bc-c902-47cc-b4c1-adab3c75acc4","name":"requete reguliere7"},{"parameters":{"assignments":{"assignments":[{"id":"c75f5868-db2a-4b53-bd3e-5b283422abb7","name":"symbol","value":"={{ $json.body.symbol }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[816,-272],"id":"b8d35700-40b2-4727-91c5-6bb0bb4ff190","name":"Edit Fields"},{"parameters":{"assignments":{"assignments":[{"id":"9ccfcebb-f4bd-4c1f-bd9c-2776da4a54f3","name":"symbol","value":"={{ $json.body.symbol }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[816,224],"id":"ff0a6f22-e67f-4569-ba41-1dde3f688f52","name":"Edit Fields1"},{"parameters":{"url":"https://api.twelvedata.com/time_series","options":{},"queryParametersUi":{"parameter":[{"name":"symbol","value":"tsla"},{"name":"interval","value":"5min"},{"name":"start_date"},{"name":"end_date"},{"name":"apikey","value":"0acb27a7d7314f52b8c63ff8a3a9becb"},{"name":"outputsize","value":"5"},{"name":"timezone","value":"America/New_York"},{"name":"order","value":"asc"},{"name":"format","value":"JSON"}]}},"name":"HTTP Request to Twelve Data","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3184,352],"id":"978aca62-c461-4e73-b14c-57f7700b7e12"},{"parameters":{"content":"# PROMPTE\n\n## Tu es un trader analyste professionnel.\n## Tu crées des stratégies intraday basées sur les concepts Smart Money (OB, FVG, BoS, Shosh, tendance).\n\n## Voici 2000 bougies en 5 minutes avec volumes.\n## Utilise-les pour reconstruire les tendances H1 et D1, calculer les EMA 50/200, identifier les zones de liquidité (PDH/PDL), et construire un plan d’intervention clair avec entrée, SL, TP et justification.","height":944,"width":400,"color":6},"type":"n8n-nodes-base.stickyNote","position":[3024,-352],"typeVersion":1,"id":"db732fc9-1a82-4203-8bf9-dd35584452c3","name":"Sticky Note3"}],"connections":{"requete reguliere2":{"main":[[{"node":"code bougie 10mn","type":"main","index":0}]]},"code bougie 10mn":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Send a text message7","type":"main","index":0}],[{"node":"Wait","type":"main","index":0}]]},"Wait":{"main":[[{"node":"requete reguliere2","type":"main","index":0}]]},"requete reguliere":{"main":[[{"node":"If1","type":"main","index":0}]]},"Code1":{"main":[[]]},"If1":{"main":[[{"node":"Code5","type":"main","index":0}],[{"node":"Wait1","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"requete reguliere","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Send a text message","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"code bougie 10mn3":{"main":[[{"node":"Code9","type":"main","index":0}]]},"Code9":{"main":[[{"node":"If6","type":"main","index":0}]]},"If6":{"main":[[{"node":"Send a text message10","type":"main","index":0}],[{"node":"Wait6","type":"main","index":0}]]},"Wait6":{"main":[[{"node":"requete reguliere6","type":"main","index":0}]]},"If7":{"main":[[{"node":"Code11","type":"main","index":0}],[{"node":"Wait7","type":"main","index":0}]]},"Code10":{"main":[[]]},"Wait7":{"main":[[{"node":"requete reguliere7","type":"main","index":0}]]},"Code11":{"main":[[{"node":"Send a text message3","type":"main","index":0}]]},"Webhook3":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"requete reguliere6":{"main":[[{"node":"code bougie 10mn3","type":"main","index":0}]]},"Send a text message7":{"main":[[{"node":"requete reguliere","type":"main","index":0}]]},"Send a text message10":{"main":[[{"node":"requete reguliere7","type":"main","index":0}]]},"requete reguliere7":{"main":[[{"node":"If7","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"requete reguliere2","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"requete reguliere6","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"1f286e23-585a-463b-b4b1-1c45f459f58c","triggerCount":2,"tags":[]}